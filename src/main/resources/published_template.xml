<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.thoughtworks.exam.core.PublishedTemplatesRepository" >

    <resultMap id="publishedTemplateMapper" type="PublishedTemplate">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="publishedBy" column="published_by" />
        <result property="publishedDate" column="published_date" />
        <result property="templateId" column="template_id" />
        <result property="paperId" column="paper_id" />
        <collection property="logicQuestionRules" javaType="ArrayList" column="logic_template_id"
                    ofType="LogicQuestionRule" select="selectLogicQuestionRulesForPublishedTemplate" >
        </collection>
        <collection property="programmingQuestions" javaType="ArrayList" column="programming_question_paper_id"
                    ofType="ProgrammingQuestion" select="selectProgrammingQuestionsForPublishedTemplate" >
        </collection>
    </resultMap>

    <select id="findPublishedTemplates" resultMap="publishedTemplateMapper">
        select * from PublishedTemplate;
    </select>

    <insert id="createLogicTemplate">
        <selectKey keyProperty="templateId" resultType="String" order="BEFORE">
            select uuid() from dual;
        </selectKey>
        insert into LogicTemplate(id) value(#{templateId,jdbcType=CHAR});
    </insert>

    <insert id="createLogicQuestionRule">
        insert into LogicQuestionRule(id, level, amount, repo_id, template_id)
        values(#{id}, #{level}, #{amount}, #{repositoryId}, #{templateId});
    </insert>

    <insert id="createProgrammingQuestionPaper">
        <selectKey keyProperty="paperId" resultType="String" order="BEFORE">
            select uuid() from dual;
        </selectKey>
        insert into ProgrammingQuestionPaper(id) values(#{paperId});
    </insert>

    <insert id="createProgrammingQuestion">
        insert into ProgrammingQuestion(id, content, answer, duration_hour, paper_id)
        values(#{id}, #{content}, #{answer}, #{durationHour}, #{paperId});
    </insert>

    <insert id="createPublishedTemplate">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select uuid() from dual;
        </selectKey>
        insert into PublishedTemplate(id, Name, published_by, published_date, logic_template_id, programming_question_paper_id)
        values(#{id}, #{name}, #{publishedBy}, now(), #{templateId}, #{paperId});
    </insert>

    <select id="getPublishedTemplateById" resultMap="publishedTemplateMapper">
        select * from PublishedTemplate  where id = #{id};
    </select>

    <select id="selectLogicQuestionRulesForPublishedTemplate" resultType="LogicQuestionRule" >
        select rule.id, rule.level, rule.amount, repo.id as repositoryId, repo.name as repositoryName, repo.url as repositoryUrl
        from LogicQuestionRule rule, LogicQuestionRepo repo
        where rule.template_id = #{logic_template_id} and repo.id = rule.repo_id;
    </select>

    <select id="selectProgrammingQuestionsForPublishedTemplate" resultType="ProgrammingQuestion" >
        select * from ProgrammingQuestion where paper_id = #{programming_question_paper_id};
    </select>

</mapper>