#%RAML 0.8
title: examOnline
version: v1
baseUri: http://api.exam.thoughtworks.com
schemas:
  - LogicQuestionRule: |
      {
          "$schema": "http://json-schema.org/draft-03/schema",
          "type": "object",
          "description": "Logic exam paper generate rule",
          "properties": {
              "id": {
                  "type": "string",
                  "required": true
              },
              "level": {
                  "type": "integer",
                  "required": true
              },
              "amount": {
                  "type": "integer",
                  "required": true
              },
              "repo_id": {
                  "type": "string",
                  "required": true
              },
              "repo_name": {
                  "type": "string",
                  "required": true
              },
              "repo_url": {
                  "type": "string",
                  "required": true
              }
          }
      }
  - ProgrammingQuestion: |
      {
          "$schema": "http://json-schema.org/draft-03/schema",
          "type": "object",
          "description": "Programming exam question",
          "properties": {
              "id": {
                  "type": "string",
                  "required": true
              },
              "content": {
                  "type": "string",
                  "required": true
              },
              "answer": {
                  "type": "string",
                  "required": true
              },
              "duration_hour": {
                  "type": "integer",
                  "required": true
              }
          }
      }
  - PublishedTemplate: |
      {
          "$schema": "http://json-schema.org/draft-03/schema",
          "type": "object",
          "description": "A published template of exam paper",
          "properties": {
              "id": {
                  "type": "string",
                  "required": true
              },
              "name": {
                  "type": "string",
                  "required": true
              },
              "published_by": {
                  "type": "integer",
                  "required": true
              },
              "published_date": {
                  "type": "string",
                  "required": true
              },
              "logic_template_id": {
                  "type": "string",
                  "required": true
              },
              "programming_paper_id": {
                  "type": "string",
                  "required": true
              },
              "logic_question_rules": {
                  "type": "array",
                  "items": {
                      "$ref": "LogicQuestionRule"
                  }
              },
              "programming_questions": {
                  "type": "array",
                  "items": {
                      "$ref": "ProgrammingQuestion"
                  }
              }
          }
      }
  - PublishedTemplates: |
      {
          "$schema": "http://json-schema.org/draft-03/schema",
          "type": "object",
          "description": "A collection of published templates of exam paper",
          "properties": {
              "PublishedTemplates":  {
                  "type": "array",
                  "items": {
                      "$ref": "PublishedTemplate"
                  }
              }
          }
      }
resourceTypes:
  - base:
      get?:
        responses: &standardResponses
          200:
            description: OK
      put?:
        responses: *standardResponses
      patch?:
        responses: *standardResponses
      post?:
          responses:
            201:
              description: Created
      delete?:
        responses: *standardResponses
  - collection:
      type: base
      get:
      post:
  - typedCollection:
      type: collection
      get:
        responses:
          200:
            body:
              application/json:
                schema: <<collectionSchema>>
      post:
        body:
          application/json:
            schema: <<schema>>
        responses:
          201:
            body:
              application/json:
                schema: <<schema>>
# /users:
#   post:
#     body:
#       application/json:
#         #schema: User
#     responses:
#       201:
#       400:
#       500:
#   /authorization:
#     post:
#   /{userId}/profile:
#       post:
#       get:
# /final-results:
#   get:
#     queryParameters:
#       user_id:
#       recruitment_id:
#       created_date:
#   /{final-result-id}:
#     /logic-result:
#       post:
#     /programming-result:
#       post:
# /recruitments:
#   get:
#   post:
#   /{recruitment-id}/end-time:
#     post:
/published-templates: &PbulishedTemplates
  type: { typedCollection: { schema: PublishedTemplate, collectionSchema: PublishedTemplates } }
  #get:
        # body:
        #   application/json:
        #     schema: PublishedTemplate
  # /{published-template-id}:
  #   get:
  #   /random-generated-logic-paper:
  #     get:
# /logic-question-repos:
#   get:
#   post:
